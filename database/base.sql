-- ============================================================
-- CREACIÓN DE TABLAS SEGÚN DIAGRAMA DE CLASES Y DICCIONARIO
-- Compatible con Oracle SQL Developer Data Modeler
-- ============================================================

-- ============================================================
-- TABLA: USUARIO
-- ============================================================
CREATE TABLE Usuario (
    id_usuario        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre            VARCHAR2(20) NOT NULL,
    correo            VARCHAR2(50) UNIQUE CHECK (correo LIKE '%@univalle.edu'),
    contraseña        VARCHAR2(20) NOT NULL CHECK (LENGTH(contraseña) >= 8),
    rol               VARCHAR2(50) NOT NULL,
    activo            NUMBER(1) DEFAULT 1 CHECK (activo IN (0,1))
);

-- ============================================================
-- TABLA: DOCENTE
-- ============================================================
CREATE TABLE Docente (
    id_docente        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario        INT NOT NULL,
    departamento      VARCHAR2(30),
    CONSTRAINT fk_docente_usuario FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario)
);

-- ============================================================
-- TABLA: ESTUDIANTE
-- ============================================================
CREATE TABLE Estudiante (
    id_estudiante     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario        INT NOT NULL,
    semestre          VARCHAR2(50) NOT NULL,
    carrera           VARCHAR2(50) NOT NULL,
    CONSTRAINT fk_estudiante_usuario FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario)
);

-- ============================================================
-- TABLA: GESTOR
-- ============================================================
CREATE TABLE Gestor (
    id_gestor         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario        INT NOT NULL,
    area_responsable  VARCHAR2(100) NOT NULL,
    CONSTRAINT fk_gestor_usuario FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario)
);

-- ============================================================
-- TABLA: COORDINACION
-- ============================================================
CREATE TABLE Coordinacion (
    id_coordinacion   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario        INT NOT NULL,
    cargo             VARCHAR2(100) NOT NULL,
    CONSTRAINT fk_coordinacion_usuario FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario)
);

-- ============================================================
-- TABLA: TI
-- ============================================================
CREATE TABLE TI (
    id_ti             INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario        INT NOT NULL,
    especialidad      VARCHAR2(100) NOT NULL,
    CONSTRAINT fk_ti_usuario FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario)
);

-- ============================================================
-- TABLA: RECURSO
-- ============================================================
CREATE TABLE Recurso (
    id_recurso        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    titulo            VARCHAR2(150) NOT NULL,
    descripcion       VARCHAR2(255),
    autor             VARCHAR2(50) NOT NULL,
    semestre          VARCHAR2(20),
    tamaño            INT CHECK (tamaño <= 1048576),
    fecha_subida      DATE NOT NULL,
    estado            VARCHAR2(50) DEFAULT 'Pendiente',
    id_docente        INT NOT NULL,
    CONSTRAINT fk_recurso_docente FOREIGN KEY (id_docente) REFERENCES Docente(id_docente)
);

-- ============================================================
-- TABLA: VERSION
-- ============================================================
CREATE TABLE Version (
    id_version        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    numero_version    INT CHECK (numero_version >= 1),
    autor             VARCHAR2(50) NOT NULL,
    fecha             DATE NOT NULL,
    id_recurso        INT NOT NULL,
    CONSTRAINT fk_version_recurso FOREIGN KEY (id_recurso) REFERENCES Recurso(id_recurso)
);

-- ============================================================
-- TABLA: METADATO
-- ============================================================
CREATE TABLE Metadato (
    id_metadato       INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    titulo            VARCHAR2(50) NOT NULL,
    materia           VARCHAR2(80) NOT NULL,
    palabras_clave    VARCHAR2(100) NOT NULL,
    tipo_recurso      VARCHAR2(50) NOT NULL,
    id_recurso        INT NOT NULL,
    CONSTRAINT fk_metadato_recurso FOREIGN KEY (id_recurso) REFERENCES Recurso(id_recurso)
);

-- ============================================================
-- TABLA: VALIDACION
-- ============================================================
CREATE TABLE Validacion (
    id_validacion     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    resultado         VARCHAR2(50) NOT NULL,
    comentario        CLOB,
    fecha             DATE NOT NULL,
    id_recurso        INT NOT NULL,
    id_gestor         INT NOT NULL,
    CONSTRAINT fk_validacion_recurso FOREIGN KEY (id_recurso) REFERENCES Recurso(id_recurso),
    CONSTRAINT fk_validacion_gestor FOREIGN KEY (id_gestor) REFERENCES Gestor(id_gestor)
);

-- ============================================================
-- TABLA: NOTIFICACION
-- ============================================================
CREATE TABLE Notificacion (
    id_notificacion   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tipo              VARCHAR2(50) NOT NULL,
    mensaje           VARCHAR2(255) NOT NULL,
    fecha_envio       TIMESTAMP NOT NULL,
    leido             NUMBER(1) DEFAULT 0 CHECK (leido IN (0,1)),
    id_usuario        INT NOT NULL,
    id_recurso        INT,
    CONSTRAINT fk_notificacion_usuario FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario),
    CONSTRAINT fk_notificacion_recurso FOREIGN KEY (id_recurso) REFERENCES Recurso(id_recurso)
);

-- ============================================================
-- TABLA: METRICA
-- ============================================================
CREATE TABLE Metrica (
    id_metrica        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tipo_evento       VARCHAR2(50) NOT NULL,
    fecha_evento      TIMESTAMP NOT NULL,
    id_recurso        INT NOT NULL,
    CONSTRAINT fk_metrica_recurso FOREIGN KEY (id_recurso) REFERENCES Recurso(id_recurso)
);

-- ============================================================
-- FIN DEL SCRIPT
-- ============================================================
